---
import Layout from "../../layouts/BlogPost.astro";
import { getCollection } from "astro:content";
import SpeakingCard from "../../components/SpeakingCard.astro";
const posts = (await getCollection("blog")).sort(
  (a, b) => a.data.pubDateTime.valueOf() - b.data.pubDateTime.valueOf()
);

const conferenceSlots = await getCollection("speaking", ({ data }) => {
  return data.eventType === "Conference";
});

const videos = await getCollection("speaking", ({ data }) => {
  return data.eventType === "Video";
});

const mediaMention = await getCollection("speaking", ({ data }) => {
  return data.eventType === "Media Mention";
});

const podcasts = await getCollection("speaking", ({ data }) => {
  return data.eventType === "Podcast";
});

const workshops = await getCollection("speaking", ({ data }) => {
  return data.eventType === "Workshop";
});
---

<Layout
  title="External speaking and media mentions"
  description="I speak at events, share my insights and learn from others."
  pubDateTime={new Date("1 March 2023")}
  updatedDate={new Date("4 March 2023")}
  heroImage="/placeholder-about.jpg"
>
  <p class="mt-6 text-base text-zinc-600 dark:text-zinc-400">
    I'm passionate about open-source, green software, and Microsoft AI: you can
    find here previous conference talks, media mentions, and other speaking
    engagements.
  </p>
  <section>
    <h3 class="text-lg pt-3 font-semibold text-zinc-800 dark:text-zinc-100">
      Conferences
    </h3>
    <ul
      role="list"
      class="mt-3 grid grid-cols-5 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-4"
    >
      {
        conferenceSlots.map((slot) => (
          <li>
            <SpeakingCard
              url={slot.data.url}
              cta={slot.data.cta}
              title={slot.data.title}
              event={slot.data.event}
              date={slot.data.date}
            >
              {slot.data.description}
            </SpeakingCard>
          </li>
        ))
      }
    </ul>
  </section>
  <section>
    <h3 class="text-lg pt-3 font-semibold text-zinc-800 dark:text-zinc-100">
      Videos
    </h3>
    <ul
      role="list"
      class="mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-4"
    >
      {
        videos.map((slot) => (
          <li>
            <SpeakingCard
              url={slot.data.url}
              cta={slot.data.cta}
              title={slot.data.title}
              footer={slot.data.event}
              date={slot.data.date}
            >
              {slot.data.description}
            </SpeakingCard>
          </li>
        ))
      }
    </ul>
  </section>
  <section>
    <h3 class="text-lg pt-3 font-semibold text-zinc-800 dark:text-zinc-100">
      Media Mentions
    </h3>
    <ul
      role="list"
      class="mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-4"
    >
      {
        mediaMention.map((slot) => (
          <li>
            <SpeakingCard
              url={slot.data.url}
              cta={slot.data.cta}
              title={slot.data.title}
              footer={slot.data.event}
              date={slot.data.date}
            >
              {slot.data.description}
            </SpeakingCard>
          </li>
        ))
      }
    </ul>
  </section>
  <section>
    <h3 class="text-lg pt-3 font-semibold text-zinc-800 dark:text-zinc-100">
      Podcasts
    </h3>
    <ul
      role="list"
      class="mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-4"
    >
      {
        podcasts.map((slot) => (
          <li>
            <SpeakingCard
              url={slot.data.url}
              cta={slot.data.cta}
              title={slot.data.title}
              footer={slot.data.event}
              date={slot.data.date}
            >
              {slot.data.description}
            </SpeakingCard>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>
